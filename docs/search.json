[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BSF Retreat 2025",
    "section": "",
    "text": "Welcome to the BSF Leaders‚Äô Retreat 2025 ü§©\n\n\n\n\n‚Ä¶we have finally booked our location for retreat‚Ä¶\n\n\n\n\n‚Ä¶can you guess where we will be?\n\n\n\n\n\n\n\n\n\nI‚Äôll give you three clues‚Ä¶\n\n\n\n\nClue #1\n\n\n\n\nClue #2\n\n\n\n\n\n\n\n\n\nClue #3: Acts 8:26\n\n\n\n\n‚Ä¶that‚Äôs right, drumroll please‚Ä¶\n\n\n\n\n\n\n\n\n\n‚Ä¶we‚Äôre going to Cowes, Philip Island üéâ\n\n\n\n\n\n\n\n\n\n\n\n\n‚Ä¶keep your eyes peeled for details üëÄüçå\n\n\n\n\n‚Ä¶but in the meanwhile please transfer $70.31 for accommodation (see chat)."
  },
  {
    "objectID": "experimental.html",
    "href": "experimental.html",
    "title": "Important Info",
    "section": "",
    "text": "Testing Testing\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 800\nfrom shiny import App, render, ui, reactive\nfrom shinywidgets import render_widget, output_widget\nfrom ipyleaflet import Map, Marker\nimport requests\n\napp_ui = ui.page_fluid(\n    ui.input_text(\"source_address\", \"Source Address\"),\n    # ui.input_numeric(\"long\", \"Long\", 0),\n    ui.output_text_verbatim(\"txt\"),\n    ui.page_fluid(output_widget(\"map\"))  \n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        addy = input.source_address().replace(\" \", \"+\")\n        url = f\"https://nominatim.openstreetmap.org/search?q={addy}&format=json\"\n\n        r = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'})\n        response = r.json()[0]\n        lat = response['lat']\n        lon = response['lon']\n        name = response['display_name']\n        return f\"The address has is {name}: coords {lat}, {lon}\"\n\n    @reactive.calc\n    def get_lat_long():\n        addy = input.source_address().replace(\" \", \"+\")\n        url = f\"https://nominatim.openstreetmap.org/search?q={addy}&format=json\"\n\n        r = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'})\n        response = r.json()[0]\n        lat = response['lat']\n        lon = response['lon']  \n        return (lat, lon)\n\n    @render_widget  \n    def map():\n        lat = get_lat_long()[0]\n        lon = get_lat_long()[1]\n        m = Map(center=(lat, lon), zoom=10) \n        m.add(Marker(location=(lat, lon)))\n        return m\n\napp = App(app_ui, server)"
  },
  {
    "objectID": "experimental.html#beta-fuel-cost-calculator",
    "href": "experimental.html#beta-fuel-cost-calculator",
    "title": "Important Info",
    "section": "",
    "text": "Testing Testing\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 800\nfrom shiny import App, render, ui, reactive\nfrom shinywidgets import render_widget, output_widget\nfrom ipyleaflet import Map, Marker\nimport requests\n\napp_ui = ui.page_fluid(\n    ui.input_text(\"source_address\", \"Source Address\"),\n    # ui.input_numeric(\"long\", \"Long\", 0),\n    ui.output_text_verbatim(\"txt\"),\n    ui.page_fluid(output_widget(\"map\"))  \n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        addy = input.source_address().replace(\" \", \"+\")\n        url = f\"https://nominatim.openstreetmap.org/search?q={addy}&format=json\"\n\n        r = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'})\n        response = r.json()[0]\n        lat = response['lat']\n        lon = response['lon']\n        name = response['display_name']\n        return f\"The address has is {name}: coords {lat}, {lon}\"\n\n    @reactive.calc\n    def get_lat_long():\n        addy = input.source_address().replace(\" \", \"+\")\n        url = f\"https://nominatim.openstreetmap.org/search?q={addy}&format=json\"\n\n        r = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'})\n        response = r.json()[0]\n        lat = response['lat']\n        lon = response['lon']  \n        return (lat, lon)\n\n    @render_widget  \n    def map():\n        lat = get_lat_long()[0]\n        lon = get_lat_long()[1]\n        m = Map(center=(lat, lon), zoom=10) \n        m.add(Marker(location=(lat, lon)))\n        return m\n\napp = App(app_ui, server)"
  },
  {
    "objectID": "experimental.html#pack-list",
    "href": "experimental.html#pack-list",
    "title": "Important Info",
    "section": "Pack List",
    "text": "Pack List\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`"
  },
  {
    "objectID": "experimental.html#schedule",
    "href": "experimental.html#schedule",
    "title": "Important Info",
    "section": "Schedule",
    "text": "Schedule\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n\n\nTime\nActivity\n\n\n\n\n09:00\nWake"
  },
  {
    "objectID": "experimental.html#the-menu",
    "href": "experimental.html#the-menu",
    "title": "Important Info",
    "section": "The Menu",
    "text": "The Menu\nQuarto„ÅßÊó•Êú¨Ë™û„ÇÇË°®„Åõ„Çã \\[\n\\int_0^\\infty x dx \\to \\infty\n\\]"
  }
]